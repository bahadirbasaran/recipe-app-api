version: "3"

services:
    app:
        build:
            # For the service named "app", set the context as the current directory.
            context: .
        ports:
            # Map the host port 8000 to Docker image port 8000.
            - "8000:8000"
        volumes:
            # Map the app directory to /app directory in the Docker image. Changes in
            # local app directory will be automatically updated in the container.
            - ./app:/app
        command: 
            # Wait for the database connection, then make database migration to create any
            # data (table etc.) that are required for the app, and then run the app. 
            >
            sh -c "python manage.py wait_for_db &&
                   python manage.py migrate &&
                   python manage.py runserver 0.0.0.0:8000"
        environment:
            # DB_HOST should match with the name of the service that runs the database.
            - DB_HOST=db
            - DB_NAME=app
            - DB_USER=postgres
            - DB_PASS=pw-recipe-app-api
        depends_on:
            # The service app depends on the service db. The service db starts before the app.
            # The service dp will be available via the network when using the host name db.
            - db

    db:
        image:
            postgres:13-alpine
        environment:
            - POSTGRES_DB=app
            - POSTGRES_USER=postgres
            - POSTGRES_PASSWORD=pw-recipe-app-api